[{"path":"/articles/roleR_intro.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"roleR_intro","text":"","code":"library(roleR)"},{"path":"/articles/roleR_intro.html","id":"highlevel-overview","dir":"Articles","previous_headings":"","what":"Highlevel overview","title":"roleR_intro","text":"object class roleExperiment contains multiple different model runs parameters used model runs. parameters held object class roleParams model runs list, element object class roleModel.","code":""},{"path":"/articles/roleR_intro.html","id":"dive-right-in","dir":"Articles","previous_headings":"","what":"Dive right in!","title":"roleR_intro","text":"","code":"library(roleR)  # set-up parameters p <- roleParams(   individuals_local = 1000,   individuals_meta = 10000,   species_meta = 50,   speciation_local = 0.5,   speciation_meta = 1,   extinction_meta = 0.8,   trait_sigma = 2,   env_sigma = 1,   comp_sigma = 1,   dispersal_prob = 0.5,   mutation_rate = 0.01,   equilib_escape = 1,   num_basepairs = 250,   init_type = 'oceanic_island',   niter = 1000,   niterTimestep = 100 )  # initialize the model m <- roleModel(p)  # run the model m <- iterModel(m)  # coerce to an experiment e <- as(m, 'roleExperiment')  # experiments have a nice data.frame summary of all the params e@experimentMeta #>    mod_id individuals_local individuals_meta species_meta speciation_local #> 1       1              1000            10000           50              0.5 #> 2       1              1000            10000           50              0.5 #> 3       1              1000            10000           50              0.5 #> 4       1              1000            10000           50              0.5 #> 5       1              1000            10000           50              0.5 #> 6       1              1000            10000           50              0.5 #> 7       1              1000            10000           50              0.5 #> 8       1              1000            10000           50              0.5 #> 9       1              1000            10000           50              0.5 #> 10      1              1000            10000           50              0.5 #> 11      1              1000            10000           50              0.5 #>    speciation_meta extinction_meta trait_sigma env_sigma comp_sigma neut_delta #> 1                1             0.8           2         1          1          0 #> 2                1             0.8           2         1          1          0 #> 3                1             0.8           2         1          1          0 #> 4                1             0.8           2         1          1          0 #> 5                1             0.8           2         1          1          0 #> 6                1             0.8           2         1          1          0 #> 7                1             0.8           2         1          1          0 #> 8                1             0.8           2         1          1          0 #> 9                1             0.8           2         1          1          0 #> 10               1             0.8           2         1          1          0 #> 11               1             0.8           2         1          1          0 #>    env_comp_delta dispersal_prob mutation_rate equilib_escape alpha #> 1               0            0.5          0.01              1     0 #> 2               0            0.5          0.01              1     0 #> 3               0            0.5          0.01              1     0 #> 4               0            0.5          0.01              1     0 #> 5               0            0.5          0.01              1     0 #> 6               0            0.5          0.01              1     0 #> 7               0            0.5          0.01              1     0 #> 8               0            0.5          0.01              1     0 #> 9               0            0.5          0.01              1     0 #> 10              0            0.5          0.01              1     0 #> 11              0            0.5          0.01              1     0 #>    num_basepairs      init_type iterations generations #> 1            250 oceanic_island          0         0.0 #> 2            250 oceanic_island        100         0.2 #> 3            250 oceanic_island        200         0.4 #> 4            250 oceanic_island        300         0.6 #> 5            250 oceanic_island        400         0.8 #> 6            250 oceanic_island        500         1.0 #> 7            250 oceanic_island        600         1.2 #> 8            250 oceanic_island        700         1.4 #> 9            250 oceanic_island        800         1.6 #> 10           250 oceanic_island        900         1.8 #> 11           250 oceanic_island       1000         2.0  # we can extract summary statistics; note: rows of summary statistic # output match rows of `e@experimentMeta` getSumStats(e, list(rich = richness, hill = hillAbund)) #>    rich    hill_1   hill_2   hill_3   hill_4 run_num #> 1     1  1.000000 1.000000 1.000000 1.000000       1 #> 2    63  1.799524 1.181156 1.133229 1.117591       2 #> 3   117  3.060663 1.402544 1.289683 1.253747       3 #> 4   165  4.871719 1.665329 1.468497 1.407165       4 #> 5   210  7.743507 2.009469 1.692806 1.596744       5 #> 6   253 11.730673 2.411545 1.943735 1.805584       6 #> 7   288 17.352767 2.991128 2.292704 2.091391       7 #> 8   328 25.649820 3.763247 2.735767 2.447678       8 #> 9   362 36.611834 4.794737 3.298245 2.891127       9 #> 10  402 52.477874 6.294772 4.081930 3.496960      10 #> 11  428 70.130690 8.335139 5.113919 4.279221      11"},{"path":"/articles/roleR_use_cases.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"roleR Use Cases","text":"","code":"#devtools::install_github(\"role-model/roleR\",dependencies=TRUE)  library(roleR) library(ggplot2) p <- roleParams(individuals_local = 100, individuals_meta = 1000,                          species_meta = 50, speciation_local = 0.05,                           speciation_meta = 0.05, extinction_meta = 0.05, env_sigma = 0.5,                          trait_sigma=1,comp_sigma = 0.5, dispersal_prob = 0.1, mutation_rate = 0.01,                          equilib_escape = 1, num_basepairs = 250,                          init_type = 'oceanic_island', niter = 1000, niterTimestep = 100) model <- runRoLE(roleModel(p)) stats <- getSumStats(model,funs=list(rich=richness)) #TODO add default where all existing sumstats are added ggplot(stats, aes(iteration, rich)) +      geom_line()"},{"path":"/articles/roleR_use_cases.html","id":"parameter-creation","dir":"Articles","previous_headings":"","what":"Parameter Creation","title":"roleR Use Cases","text":"Create set parameters specifying every one Create set params per Unified Neutral Theory Biodiversity (UNTB). creates “UNTB-flavored” RoLE model See roleParams documentation descriptions available parameters Group Question: default parameters exist simply p <- roleParams() creates valid params? defaults ?","code":"p <- roleParams(individuals_local = 100, individuals_meta = 1000,                          species_meta = 50, speciation_local = 0.05,                           speciation_meta = 0.05, extinction_meta = 0.05, env_sigma = 0.5,                          trait_sigma=1,comp_sigma = 0.5, dispersal_prob = 0.1, mutation_rate = 0.01,                          equilib_escape = 1, num_basepairs = 250,                          init_type = 'oceanic_island', niter = 1000, niterTimestep = 100) p_untb <- untbParams(individuals_local = 100, individuals_meta = 1000,                          species_meta = 50,                          speciation = 0.2,                          dispersal_prob = 0.1, init_type = 'oceanic_island',                         niter = 30000, niterTimestep = 1000)"},{"path":"/articles/roleR_use_cases.html","id":"model-experiment-creation-running","dir":"Articles","previous_headings":"","what":"Model & Experiment Creation & Running","title":"roleR Use Cases","text":"Create model (yet run) using params, run Create experiment (yet run) containing two models created using sets params, run . Experiment running can parallelized Windows, Mac, & Linux specifying number cores use. run experiment, runs every model within . Experiments intended encapsulate one hypotheses comparison multiple varying models contained within Group Question: encapsulating multiple models experiments useful, rather deal models individually use cases?","code":"model <- roleModel(p) model <- runRoLE(model) exp <- roleExperiment(list(p,p_untb)) #library(parallel) #exp <- runRoLE(exp,cores=2)"},{"path":"/articles/roleR_use_cases.html","id":"extracting-data-from-models","dir":"Articles","previous_headings":"","what":"Extracting Data From Models","title":"roleR Use Cases","text":"Get summary stats time single model, row different saved iteration state. Available raw stats rawAbundance, rawSpAbundance, rawTraits, rawGenDiv, rawBranchLengths, rawApePhylo. Available transformed stats hillAbund, hillGenetic, hillTrait, hillPhylo, richness.","code":"stats <- getSumStats(model, list(rich = richness,hill_abund=hillAbund)) stats ##    rich hill_abund_1 hill_abund_2 hill_abund_3 hill_abund_4 iteration ## 1     1     1.000000     1.000000     1.000000     1.000000         0 ## 2    15     2.878159     1.628664     1.451319     1.392741       100 ## 3    20     4.513310     2.124947     1.782460     1.672288       200 ## 4    13     3.411287     1.893222     1.635853     1.549570       300 ## 5    20     6.211256     2.927400     2.318071     2.115546       400 ## 6    24     8.899449     4.108463     3.081785     2.734310       500 ## 7    21     7.943058     3.903201     2.980974     2.657831       600 ## 8    19     6.998104     3.706449     2.887642     2.585832       700 ## 9    19     7.889036     3.937008     2.988072     2.659203       800 ## 10   22    10.972850     5.611672     4.056069     3.504531       900 ## 11   20    10.883219     6.337136     4.693853     4.035401      1000"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Rominger. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rominger , Idec J, Diaz R (2023). roleR: Rules Life Engine. R package version 0.1.0.","code":"@Manual{,   title = {roleR: Rules of Life Engine},   author = {Andrew Rominger and Jacob Idec and Renata Diaz},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"roler","dir":"","previous_headings":"","what":"Rules of Life Engine","title":"Rules of Life Engine","text":"R package implementing RoLE model","code":""},{"path":"/reference/rolePhylo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"RoLE phylogeny — rolePhylo-class","title":"RoLE phylogeny — rolePhylo-class","text":"S4 class specify phylogeny way can easily     evolved simulation","code":""},{"path":"/reference/rolePhylo-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"RoLE phylogeny — rolePhylo-class","text":"n number tips e edge matrix; two columns give ancestor, child pair l numeric vector edge lengths (units time steps = 1/J generations) alive vector indicating whether tips extant tipNames vector tip names scale time scale translation years","code":""},{"path":"/reference/rolePhylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a RoLE model phylogeny — rolePhylo","title":"Specify a RoLE model phylogeny — rolePhylo","text":"Specify RoLE model phylogeny","code":""},{"path":"/reference/rolePhylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a RoLE model phylogeny — rolePhylo","text":"","code":"rolePhylo(n, e, l, alive, tipNames, scale)"},{"path":"/reference/rolePhylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a RoLE model phylogeny — rolePhylo","text":"n number tips e edge matrix; two columns give ancestor, child pair l numeric vector edge lengths (units time steps = 1/J generations) alive vector indicating whether tips extant tipNames vector tip names scale time scale translation years","code":""}]
